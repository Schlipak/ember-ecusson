//
// Spinner element for Ecusson
//

$spinner-size: 40;
$spinner-dash-offset: 200;
$spinner-animation-duration: 3s;

.spinner {
  display: block;
  position: relative;
  margin: .5em;

  color: $color-black;

  .svg {
    position: relative;
    
    &:before {
      content: "\f00c";
      display: block;
      position: absolute;

      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);

      font-family: $font-icons;
      font-size: 1.5em;

      color: currentColor;
      opacity: 0;

      transition: opacity .3s;
      transition-delay: .4s;
    }
  }

  .circle.inner {
    display: block;
    position: relative;
    width: 3em;
    height: 3em;
    margin: 0;
    padding: 0;

    circle {
      stroke-dasharray: (3.14 * $spinner-size);
      stroke-dashoffset: 0;
      fill: none;
      stroke-width: 4;
      stroke-linecap: round;

      transform-origin: center;

      animation-name: animationSpinnerCircle;
      animation-duration: $spinner-animation-duration;
      animation-timing-function: linear;
      animation-iteration-count: infinite;

      stroke: $color-black;
    }
  } //! .circle.inner

  &.done {
    .circle.inner {
      animation: none;

      circle {
        animation: none;

        transition: stroke-dashoffset 1s;
      }
    }

    .svg:before {
      opacity: 1;
    }
  }

  span {
    display: inline-block;
    position: relative;

    margin-top: 1em;
  }

  $i: 1;
  @each $kvp in $--std-colors-dark {
    &.#{nth($kvp, 1)} {
      color: nth($kvp, 2);

      .circle.inner circle {
        stroke: transparentize(nth($kvp, 2), .1);
      }

      span {
        color: darken(nth($kvp, 2), 20%);
      }
    }

    $i: $i + 1;
  }
}

@keyframes animationSpinnerCircle {
  0% {
    transform: rotate(0deg);
    stroke-dashoffset: (0.66 * $spinner-size);
  }
  50% {
    transform: rotate(720deg);
    stroke-dashoffset: (3.14 * $spinner-size);
  }
  100% {
    transform: rotate(1080deg);
    stroke-dashoffset: (0.66 * $spinner-size);
  }
}
