//
// Radio element for Ecusson CSS
//

.radio {
  display: inline-flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  position: relative;

  .dot {
    display: inline-block;
    position: relative;
    width: 1.5em;
    height: 1.5em;
    padding: 0;

    background-color: $color-white-off-dark;
    border-radius: 50%;
    @include webkit-border-radius-fix;

    overflow: visible;

    transition: background-color .3s;

    &.disabled {
      opacity: .5;
      cursor: default;
    }

    &:active:not(.disabled) {
      background-color: $color-grey;
    }

    input[type="radio"] {
      display: block;
      position: relative;
      width: 100%;
      height: 100%;

      opacity: 0;
      cursor: pointer;
    } //! input[type="radio"]

    .overlay {
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;

      text-align: center;
      line-height: 1.5em;
      font-family: $font-icons;
      color: $color-white;

      border-radius: 50%;
      background-color: $color-blue;
      opacity: 0;

      transform: scale(.75);
      transform-origin: center;

      transition: opacity .3s,
                  transform .3s,
                  background-color .3s;

      pointer-events: none;
      @include no-select;

      &:before {
        content: '';
        display: block;
        position: relative;
        top: 50%;
        left: 50%;
        width: 50%;
        height: 50%;

        transform: translate(-50%, -50%);

        border-radius: 50%;
        background-color: $color-white;
      }
    } //! .overlay

    &:active:not(.disabled) .overlay {
      background-color: $color-blue-dark;
    }

    input[type="radio"]:checked + .overlay {
      transform: scale(1);
      opacity: 1;
    }

    $i: 1;
    @each $kvp in $--std-colors {
      $class: nth($kvp, 1);
      $light: nth($kvp, 2);
      $dark: nth(nth($--std-colors-dark, $i), 2);

      .overlay.#{$class} {
        background-color: $light;
      }

      &:active .overlay.#{$class} {
        background-color: $dark;
      }

      &.disabled {
        .overlay.#{$class} {
          background-color: $light;
        }
        &:active .overlay.#{$class} {
          background-color: $light;
        }
      }

      $i: $i + 1;
    }

    .overlay.black {
      background-color: lighten($color-black, 20%);
    }

    &:active:not(.disabled) .overlay.black {
      background-color: lighten($color-black, 10%);
    }
  } //! .box

  span {
    display: inline-block;
    position: relative;
    padding: 0;
    margin: .5em;

    @include no-select;

    &.disabled {
      opacity: .5;
    }
  }
}
